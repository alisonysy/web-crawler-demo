<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="//at.alicdn.com/t/font_1937663_fzu1bqjutc.js"></script>
  </head>
  <body>
    <div class="container-fluid text-center">
      <h1 class="container-md title"><%= slogan %></h1>
      <svg class="icon downarrow" aria-hidden="true">
        <use xlink:href="#icon-downarrow"></use>
      </svg>
      <form>
        <div class="form-group">
          <label for="numberToFetch">Enter the number of posts to fetch at a time:</label>
          <input type="number" name="numberToFetch" id="numberToFetch" class="form-control col-sm-4" />
          <small class="form-text text-muted">
            The max number of posts to fetch at a time is 300.
          </small>
        </div>
        <button type="submit" class="btn">Submit</button>
      </form>
    </div>
    <script>
      (function(){
        const validators = (function(){
          let o = {};

          function registerValidator(name,cb){
            if(o[name]) throw new Error('Validator has been registered.');
            o[name] = cb;
          }

          function validate(name){
            return o[name];
          }

          return {
            registerValidator,
            validate
          }
        })();
        validators.registerValidator('isNumber',(value,cb) => {
          if(!value || typeof value !== 'number'){
            cb();
          }
        });
        validators.registerValidator('overMaxNumber',(value,cb) => {
          if(value > 300){
            cb();
          }
        })
        let f = document.getElementById('numberToFetch');
        f.addEventListener('blur',function(e){
          this.classList.remove('is-invalid');
          validators.validate('isNumber')(+e.target.value,() => {
            console.log('this is not a number, should throw an error.');
            this.classList.add('is-invalid');
          });
          validators.validate('overMaxNumber')(+e.target.value, () => {
            console.log('the number is over the max number to fetch.')
          })
        })
      })();
    </script>
  </body>
</html>
